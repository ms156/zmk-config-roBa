#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            // 追加: スクロールのタップ時間を設定 (20ms)

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q         &kp W      &kp E       &kp R               &kp T                                                     &kp Y                       &kp U  &kp I      &kp O      &kp P
&kp A         &kp S      &kp D       &kp F               &kp G        &kp LS(LG(S))         &kp MINUS              &kp H                       &kp J  &kp K      &kp L      &kp ENTER
&kp Z         &kp X      &kp C       &kp V               &kp B        &kp TAB               &kp SEMICOLON          &kp N                       &kp M  &mkp LCLK  &mkp RCLK  &kp SLASH
&kp LEFT_WIN  &kp COMMA  &kp PERIOD  &lt 1 INT_MUHENKAN  &lt 2 SPACE  &lt 3 LANGUAGE_1      &mt LEFT_SHIFT DELETE  &mt LEFT_CONTROL BACKSPACE                               &kp DEL
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        NUM {
            bindings = <
&kp ESC                     &kp KP_NUMBER_7         &kp UP_ARROW     &kp KP_NUMBER_9          &kp SLASH                                               &kp PLUS      &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp RIGHT_PARENTHESIS
&kp HOME                    &kp LEFT_ARROW          &kp DOWN_ARROW   &kp RIGHT_ARROW          &kp END    &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &kp MINUS     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp PERCENT
&mt LEFT_SHIFT KP_NUMBER_0  &kp LG(LS(LEFT_ARROW))  &kp KP_NUMBER_2  &kp LG(LS(RIGHT_ARROW))  &kp EQUAL  &kp EQUAL                    &trans          &kp ASTRK     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BACKSLASH
&trans                      &trans                  &trans           &trans                   &trans     &trans                       &trans          &kp NUMBER_0                                            &kp PIPE
            >;
        };

        symbol {
            bindings = <
&trans  &kp DOLLAR  &kp PERCENT      &kp HASH         &trans                      &trans  &kp LEFT_BRACKET      &kp RIGHT_BRACKET  &kp LESS_THAN   &kp GREATER_THAN
&trans  &kp EQUAL   &kp QUESTION     &kp EXCLAMATION  &trans  &trans      &trans  &trans  &kp LEFT_PARENTHESIS  &kp RPAR           &kp LEFT_BRACE  &kp RIGHT_BRACE
&trans  &kp PLUS    &kp LC(INT_YEN)  &kp CARET        &trans  &trans      &trans  &trans  &kp BACKSLASH         &kp PIPE           &kp AMPERSAND   &kp AT_SIGN
&trans  &trans      &trans           &trans           &trans  &trans      &trans  &trans                                                           &trans
            >;
        };

        function {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                        &trans    &kp F7  &kp F8  &kp F9  &kp F12
&trans        &trans        &trans        &trans        &trans        &trans      &trans    &trans    &kp F4  &kp F5  &kp F6  &kp F11
&trans        &trans        &trans        &trans        &trans        &trans      &trans    &trans    &kp F1  &kp F2  &kp F3  &kp F10
&trans        &trans        &trans        &trans        &trans        &trans      &mkp MB4  &mkp MB5                          &trans
            >;
        };
    };
};
